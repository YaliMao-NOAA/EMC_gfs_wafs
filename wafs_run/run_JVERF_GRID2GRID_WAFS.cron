#!/bin/bash

########################################################
# WAFS Verification package
# a sequential job
# Suggestion: allow 3 hours for each run to complete
#
########################################################

# 1) (On Dell) $HOMEsave/wafs_run/run_JVERF_GRID2GRID_WAFS.htar to archive GFIP
# 2) (On Hera) $HOMEsave/wafs_run/run_JVERF_GRID2GRID_WAFS.htar to extract all data
# 3) $HOMEsave/wafs_run/run_JVERF_GRID2GRID_WAFS.sh
# 4) HOMEverf_g2g=$HOMEgit/verf_g2g.v3.0.12
#      jobs/JVERF_GRID2GRID_WAFS
#      scripts/exverf_g2g_wafs.sh.ecf
#      / ush/verf_g2g_get_wafs2.sh
#      | ush/verf_g2g_get_wafs.sh
#      \ ush/verf_g2g_wafs.sh
#        / verf_g2g_prepg2g_grib2.sh
#        \ verf_g2g_fitsg2g_grib2.sh
#      !!! needs compiling !!! $HOMEverf_g2g/exec/verf_g2g_icing_convert.$MACHINE
#      !!! needs compiling !!! $HOMEverf_g2g/exec/verf_g2g_grid2grid_grib2.$MACHINE

#*******************************************************
# To load $HOMEsave/envir_setting.sh
. ~/.bashrc

set -x

date

########################################################
#### arguments, cyc, vday                           ####
########################################################

export envirp=$1   # prod or para, forecast product
export envirv=$2   # prod or para, valication data
windonly=$3
if [[ $windonly = "wind" ]] ; then
    export VMODELS="|gfs|"
fi

# verfication is 2 days ago unless it's predefined.
export vday=${vday:-`$NDATE -48 | cut -c1-8`}
# cyc doesn't matter for verification.
# export cyc=${cyc:-12}

export DATA=$TMP/wafs.vrfy_${envirp}.${envirv}_working
mkdir -p $DATA

export COMIN=$TMP/wafs.vrfy.com
mkdir -p $COMIN # For extracting data from HPSS

########################################################
#### inputs for US forecast and GCIP                #### 
########################################################

if [[ `hostname` =~ ^h ]] ; then

  # On Hera, data are from HPSS, input data need to be extracted and have the same COMROOT
  # On Hera, only do prod.prod verification

  SUB=sbatch
  ACCOUNT=ovp
  htarscript=$HOMEsave/wafs_run/run_JVERF_GRID2GRID_WAFS.htar

  # Extract data from HPSS to Hera
  echo 0 $htarscript $vday $COMIN > $TMP/wafs.vrfy_${envirp}.${envirv}_working/htar.cmdfile
  srun -l --multi-prog -A ovp --ntasks=1 -p service -t 01:00:00 $TMP/wafs.vrfy_${envirp}.${envirv}_working/htar.cmdfile

  jobname=wafs_verif
  logfile=$DATA/wafs_verif.grid2grid.hera
  rm $logfile
  script=$HOMEsave/wafs_run/run_JVERF_GRID2GRID_WAFS.sh

  ${SUB} -A ${ACCOUNT} -t 04:30:00 -N 1 -q batch -J ${jobname} -o ${logfile} ${script}

else
  # verfication is 1 day before today unless it's predefined.
  export vday=${vday:-`$NDATE -24 | cut -c1-8`}

  SUB="bsub <"
  # # For WCOSS
  # $SUB -q $JOB_QUEUE -P $PROJECT -o ${logfile} -M 100 -R affinity[core] -W 0:20 -J ${jobname} -cwd ${PWD} ${plot_hist}
fi

########################################################
### Archive vsdb results to HPSS                    ####
########################################################

if [[ $windonly = "wind" ]] ; then
    sleep 720
    sleepmax=1800
    sleepint=60
else
    # WAFS verification takes at least 1 hour
    sleep 3600
    sleepmax=16200 # wait at most 4.5 hours
    sleepint=180   # check every 3 minutes
fi
sleeptime=0
while [ $sleeptime -le $sleepmax ] ; do
    if test -f $DATA/$vday/$vday ; then
	break
    else
	sleeptime=`expr $sleeptime + $sleepint`
	sleep $sleepint
    fi
    if [ $sleeptime -eq $sleepmax ] ; then
	echo " *** FATA ERROR: No verification data is generated for $vday"
	exit
    fi
done

cd $TMP
day=`echo $vday | cut -c1-6`
htar -Pcvf /NCEPDEV/emc-global/5year/Yali.Mao/wafs_vsdb/${envirp}.${envirv}/$day/$vday.vsdb.tar `find wafs.vrfy_${envirp}.${envirv}_vsdb/wafs -name "*$vday*" -size +1c -type f`

########################################################
### transfer vsdb to tempest and save to            ####
### /gpfs/dell2/emc/modeling/noscrub/Yali.Mao/vsdb  #### 
########################################################
dataDir=wafs.vrfy_${envirp}.${envirv}_vsdb/wafs

cd $TMP
allfilesize=`du -c $dataDir/*$vday* | tail -1| cut -f 1`

if [[ $allfilesize  -eq 0 ]] ; then
  echo "No ${envirp}.${envirv} vsdb result is generated. Please check."
  echo "No ${envirp}.${envirv} vsdb result is generated on $vday." | mailx -s "VSDB verification is not generated." yali.mao@noaa.gov
else
  # to tempest
  if [[ ! `hostname` =~ ^h ]] ; then
    remote=/gmb/wd20ym/vsdb
    remoteServer=wd20ym@tempest
    # rsync -ravP --min-size=1 $TMP/$dataDir/. ${remoteServer}:${remote}/.
  fi

  # to wcoss/save folder
  mkdir -p $VSDBsave/wafs/${envirp}.${envirv}
  rsync -avP --min-size=1 $TMP/$dataDir/. $VSDBsave/wafs/${envirp}.${envirv}/.
fi

date
exit 0
